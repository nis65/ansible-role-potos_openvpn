#!/bin/bash
#
# This script reads the content of an ovpn config
# from stdin and creates a system managed openvpn
# connection. Note that this needs to work without
# user interaction so all key material must be
# available in plaintext (or there is an integration
# with a hardware security module like TPM).
#
# The name of the vpn is expected as first param
# It is assumed that the openvpn pkg is installed
# and therefore the expected directories exist.

if [[ "${USER}" != "root" ]]
then
  echo "need to run as root"
  exit 1
fi

vpnname="$1"

if [[ -z "${vpnname}" ]]
then
  echo "need a target vpn name"
  exit 1
fi

cleantargetname=$( echo "${vpnname}" | /usr/bin/tr "[:upper:]" "[:lower:]" | /usr/bin/tr -d -c "[:alnum:]_-" )

if [[ -z "${cleantargetname}" ]]
then
  echo "need a valid clean target name"
  echo "dirty: ${vpnname}"
  echo "clean: ${cleantargetname}"
  exit 1
fi

echo -n "."
systemctl stop openvpn-client@${cleantargetname}
echo -n "."
systemctl disable openvpn-client@${cleantargetname}
echo -n "."
cat > /etc/openvpn/client/${cleantargetname}.conf
echo -n "."
systemctl daemon-reload
echo -n "."
systemctl enable openvpn-client@${cleantargetname}
echo -n "."
systemctl start openvpn-client@${cleantargetname}
echo -n ":"
